{"version":3,"sources":["components/TodoComponents/Todo.js","components/TodoComponents/TodoList.js","components/TodoComponents/TodoForm.js","components/TodoComponents/ClearButtons.js","App.js","index.js"],"names":["Todo","this","props","item","toggleCompleted","className","onClick","id","completed","style","textDecoration","color","task","React","Component","TodoList","todoArray","map","key","TodoForm","addTodo","initialValues","addItemField","onSubmit","render","name","type","placeholder","ClearButtons","clearCompleted","clearAll","StyledToDoWiget","styled","div","localStorage","window","dummyTodoData","App","formValues","actions","newTodo","Date","now","setState","currentState","newTodoArray","concat","setItem","JSON","stringify","resetForm","event","currentItemId","currentTarget","targetIndex","findIndex","toString","newState","filteredTodoArray","filter","removeItem","startingData","getItem","state","parse","document","getElementById"],"mappings":"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","file":"static/js/main.bc5cebb7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Todo extends React.Component {\r\n    render() {\r\n        const {item, toggleCompleted} = this.props;\r\n\r\n        return (\r\n            <div className=\"list-item\" onClick={toggleCompleted} id={item.id}>\r\n                {\r\n                    item.completed ?\r\n                        <>\r\n                            <div className=\"checkbox\">âœ”</div>\r\n                            <p style={{textDecoration: \"line-through\", color: \"red\"}}>{item.task}</p>\r\n                        </> :\r\n                        <>\r\n                            <div className=\"checkbox\" />\r\n                            <p>{item.task}</p>\r\n                        </>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport Todo from \"./Todo\";\r\n\r\nexport default class TodoList extends React.Component {\r\n    render() {\r\n        const {todoArray, toggleCompleted} = this.props;\r\n\r\n        return (\r\n            <div className=\"list\">\r\n                {todoArray.map(item => (\r\n                    <Todo item={item} toggleCompleted={toggleCompleted} key={item.id}/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Formik, Form, Field} from \"formik\";\r\n\r\nexport default class TodoForm extends React.Component {\r\n    render() {\r\n        const { addTodo } = this.props;\r\n\r\n        return (\r\n            <Formik \r\n                initialValues={{addItemField: \"\"}}\r\n                onSubmit={addTodo}\r\n                render={props => {\r\n                    return (\r\n                        <Form>\r\n                            <Field name=\"addItemField\" type=\"text\" placeholder=\"+ Add to-do...\" />\r\n                            <button type=\"submit\">Add</button>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class ClearButtons extends React.Component {\r\n    render() {\r\n        const {clearCompleted, clearAll} = this.props;\r\n        return (\r\n            <div className=\"clear-buttons\">\r\n                <button onClick={clearCompleted}>Clear completed</button>\r\n                <button onClick={clearAll}>Clear all</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nimport TodoList from \"./components/TodoComponents/TodoList\";\r\nimport TodoForm from './components/TodoComponents/TodoForm';\r\nimport ClearButtons from './components/TodoComponents/ClearButtons';\r\n\r\nconst StyledToDoWiget = styled.div`\r\n  margin: 0 auto;\r\n  border: 2px solid black;\r\n  border-radius: 10px;\r\n  margin-top: 3rem;\r\n  width: 25rem;\r\n  height: 30rem;\r\n  padding: 1rem;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n\r\n  background: #8E0E00;  /* fallback for old browsers */\r\n  background: -webkit-linear-gradient(to right, #1F1C18, #8E0E00);  /* Chrome 10-25, Safari 5.1-6 */\r\n  background: linear-gradient(to top, #1F1C18, #8E0E00); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n  .title {\r\n    border-bottom: 1.5px solid black;\r\n    height: 10%;\r\n    width: 95%;\r\n    margin-bottom: 2rem;\r\n    padding-bottom: 0.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    h1 {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n\r\n  .list {\r\n    width: 100%;\r\n\r\n    .list-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 1rem 0.5rem 1rem;\r\n    font-weight: bold;\r\n\r\n    p:hover {\r\n      color: red;\r\n    }\r\n\r\n      .checkbox {\r\n        height: 0.8rem;\r\n        width: 0.8rem;\r\n        background: black;\r\n        margin-right: 0.5rem;\r\n        border-radius: 2px;\r\n        color: red;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 0.7rem;\r\n      }\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n\r\n  form {\r\n    margin-left: 2.3rem;\r\n    width: 100%;\r\n\r\n    input {\r\n      border-radius: 2px;\r\n      border: 2px solid black;\r\n      padding-left: 0.5rem;\r\n      margin-top: 0.5rem;\r\n      margin-right: 0.5rem;\r\n      background: none;\r\n      max-width: 80%;\r\n      \r\n      ::placeholder {\r\n        color: black;\r\n      }\r\n    }\r\n  }\r\n\r\n  .clear-buttons {\r\n    position: absolute;\r\n    bottom: 0;\r\n    margin-bottom: 2rem;\r\n    \r\n    button {\r\n      margin: 0 0.5rem 0 0.5rem;\r\n    }\r\n  }\r\n\r\n  button {\r\n    padding: 0.2rem;\r\n    border-radius: 2px;\r\n    background: black;\r\n    color: maroon;\r\n    font-weight: bold;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: red;\r\n    }\r\n  }\r\n`;\r\n\r\nconst localStorage = window.localStorage;\r\n\r\nconst dummyTodoData = [\r\n  {\r\n    task: 'Organize Garage',\r\n    id: 1528817077286,\r\n    completed: false\r\n  },\r\n  {\r\n    task: 'Bake Cookies',\r\n    id: 1528817084358,\r\n    completed: false\r\n  }\r\n];\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const startingData = localStorage.getItem(\"todoArray\");\r\n    if (startingData !== null) {\r\n      this.state = {\r\n        todoArray: JSON.parse(startingData),\r\n      }\r\n    } else {\r\n      this.state = {\r\n        todoArray: dummyTodoData\r\n      };\r\n    }\r\n  }\r\n\r\n  addTodo = (formValues, actions) => {\r\n    if (formValues.addItemField !== \"\") {\r\n      const newTodo = {\r\n        task: formValues.addItemField,\r\n        id: Date.now(),\r\n        completed: false,\r\n      }\r\n  \r\n\r\n      this.setState(currentState => {\r\n        const newTodoArray = currentState.todoArray.concat([newTodo]);\r\n\r\n        localStorage.setItem(\"todoArray\", JSON.stringify(newTodoArray));\r\n\r\n        return ({\r\n          todoArray: newTodoArray,\r\n        });\r\n      });\r\n    }\r\n\r\n    actions.resetForm();\r\n  };\r\n\r\n  toggleCompleted = event => {\r\n    const currentItemId = event.currentTarget.id;\r\n    // Question: Why is 'event' not _visible_ inside setState()?\r\n\r\n    this.setState(currentState => {\r\n      const targetIndex = currentState.todoArray.findIndex(item => \r\n        item.id.toString() === currentItemId\r\n      );\r\n      \r\n      let newState = currentState.todoArray;\r\n      newState[targetIndex].completed ?\r\n        newState[targetIndex].completed = false :\r\n        newState[targetIndex].completed = true;\r\n\r\n      return ({ todoArray: newState });\r\n    });\r\n  };\r\n\r\n  clearCompleted = event => {\r\n    this.setState(currentState => {\r\n      const filteredTodoArray = currentState.todoArray.filter(item => item.completed === false);\r\n\r\n      localStorage.setItem(\"todoArray\", JSON.stringify(filteredTodoArray));\r\n\r\n      return ({ todoArray: filteredTodoArray });\r\n    });\r\n  };\r\n\r\n  clearAll = event => {\r\n    this.setState({todoArray: []});\r\n    localStorage.removeItem(\"todoArray\");\r\n  };\r\n\r\n  render() {\r\n    const { todoArray } = this.state;\r\n\r\n    return (\r\n      <StyledToDoWiget>\r\n        <div className=\"title\">\r\n          <h1>To-Do List</h1>\r\n        </div>\r\n        <TodoList todoArray={todoArray} toggleCompleted={this.toggleCompleted}/>\r\n        <TodoForm addTodo={this.addTodo}/>\r\n        <ClearButtons clearCompleted={this.clearCompleted} clearAll={this.clearAll}/>\r\n      </StyledToDoWiget>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}